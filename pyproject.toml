[build-system]
requires = [
    "bidict",
    "cloudpickle",
    "executorlib",
    "graphviz",
    "pandas",
    "pint",
    "pyiron_snippets",
    "toposort",
    "typeguard",
    "setuptools>=68.0.0",
    "versioneer[toml]==0.29",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "pyiron_workflow"
description = "pyiron_workflow - Graph-and-node based workflow tools."
readme = "docs/README.md"
keywords = [ "pyiron",]
requires-python = ">=3.11, <3.14"
classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: BSD License",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "bagofholding==0.1.0",
    "bidict==0.23.1",
    "cloudpickle==3.1.1",
    "executorlib==1.5.1",
    "graphviz==0.21",
    "pandas==2.3.0",
    "pint==0.24.4",
    "pyiron_snippets==0.2.0",
    "toposort==1.10",
    "typeguard==4.4.4",
]
dynamic = [ "version",]
authors = [
    { name = "Liam Huber", email = "liamhuber@greyhavensolutions.com" },
]

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://github.com/pyiron/pyiron_workflow"
Documentation = "https://pyiron-workflow.readthedocs.io"
Repository = "https://github.com/pyiron/pyiron_workflow"

[tool.versioneer]
VCS = "git"
style = "pep440-pre"
versionfile_source = "pyiron_workflow/_version.py"
parentdir_prefix = "pyiron_workflow"
tag_prefix = "pyiron_workflow-"

[tool.setuptools.packages.find]
include = [ "pyiron_workflow*",]

[tool.setuptools.dynamic.version]
attr = "pyiron_workflow.__version__"

[tool.ruff]
exclude = ["docs", "notebooks", "setup.py", "_version.py"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # flake8-comprehensions
    "C4",
    # eradicate
    "ERA",
    # pylint
    "PL",
]
ignore = [
    # ignore line-length violations
    "E501",
    # Too many arguments in function definition
    "PLR0913",
    # Magic value used in comparison
    "PLR2004",
    # Import alias does not rename original package
    "PLC0414",
    # Too many branches
    "PLR0912",
    # Too many statements
    "PLR0915",
    # Too many return statements
    "PLR0911",
]

[tool.ruff.lint.per-file-ignores]
"pyiron_workflow/executors/__init__.py" = ["F401"]  # Ignore unused imports in init files -- we specify APIs this way
"pyiron_workflow/__init__.py" = ["F401"]  # Ignore unused imports in init files -- we specify APIs this way
"pyiron_workflow/api.py" = ["F401"]  # Ignore unused imports in api file -- we specify APIs this way
"pyiron_workflow/mixin/injection.py" = ["PLC0415"]  # Allow non-top imports
"pyiron_workflow/create.py" = ["PLC0415"]  # Allow non-top imports

[tool.black]
extend-exclude = '''
(
  ^/docs
)
'''

[tool.mypy]
exclude = [
    "^docs/conf\\.py$",
    "^tests/",
]
ignore_missing_imports = true
strict_equality = true
